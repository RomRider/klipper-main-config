[menu __main __power]
type: list
name: Power
index: 3

[menu __main __power __printeroff]
type: list
enable: { not printer.idle_timeout.state == "Printing" and 'gcode_macro _POWER_OFF_PRINTER' in printer }
name: Power Off

[menu __main __power __printeroff __confirm]
type: command
name: Confirm
gcode:
    {menu.exit(True)}
    M400
    {% if 'gcode_macro _LCD_DISPLAY_OFF' in printer %}
        _LCD_DISPLAY_OFF
    {% endif %}
    _POWER_OFF_PRINTER

[menu __main __power __auto_off]
type: input
enable: {"idle_timeout" in printer.configfile.settings}
name: Auto-Off: {"On" if menu.input else "Off"}
input: {printer.save_variables.variables.auto_off|default(1)}
input_min: 0
input_max: 1
input_step: 1
gcode:
  {% set svv = printer.save_variables.variables %}
  SAVE_VARIABLE VARIABLE=auto_off VALUE={menu.input|default(svv.auto_off|default(1)) | int}

[menu __main __power __ledson]
type: command
name: LEDs Turn On
enable: {'gcode_macro VARIABLES' in printer and 'moonraker_leds_name' in printer["gcode_macro VARIABLES"]}
gcode:
    {action_call_remote_method("set_device_power",
                            device=printer["gcode_macro VARIABLES"].moonraker_leds_name,
                            state="on")}

[menu __main __power __ledsoff]
type: command
name: LEDs Turn Off
enable: {'gcode_macro VARIABLES' in printer and 'moonraker_leds_name' in printer["gcode_macro VARIABLES"]}
gcode:
    {action_call_remote_method("set_device_power",
                            device=printer["gcode_macro VARIABLES"].moonraker_leds_name,
                            state="off")}

[menu __main __power __case_led]
type: input
name: Case LEDs: {"On" if menu.input else "Off"}
enable: { 'gcode_macro VARIABLES' in printer and 'case_led_name' in printer["gcode_macro VARIABLES"] }
input: { printer["gcode_macro _SET_CASE_LED"].status }
input_min: 0
input_max: 1
input_step: 1
gcode:
    _CASE_LED_{"ON" if menu.input else "OFF"}

[menu __main __power __auto_case_leds]
type: input
enable: {'neopixel leds' in printer.configfile.settings}
name: Auto-Leds: {"On" if menu.input else "Off"}
input: {printer.save_variables.variables.auto_case_led|default(0)}
input_min: 0
input_max: 1
input_step: 1
gcode:
  {% set svv = printer.save_variables.variables %}
  SAVE_VARIABLE VARIABLE=auto_case_led VALUE={menu.input|default(svv.auto_case_led|default(0)) | int}