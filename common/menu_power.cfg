[menu __main __power]
type: list
name: Power
index: 3

[menu __main __power __printeroff]
type: command
name: Printer Off
enable: { not printer.idle_timeout.state == "Printing" and 'gcode_macro POWER_OFF_PRINTER' in printer }
gcode:
    POWER_OFF_PRINTER

[menu __main __power __ledson]
type: command
name: LEDs Turn On
enable: {'gcode_macro VARIABLES' in printer and 'moonraker_leds_name' in printer["gcode_macro VARIABLES"]}
gcode:
    {action_call_remote_method("set_device_power",
                            device=printer["gcode_macro VARIABLES"].moonraker_leds_name,
                            state="on")}

[menu __main __power __ledsoff]
type: command
name: LEDs Turn Off
enable: {'gcode_macro VARIABLES' in printer and 'moonraker_leds_name' in printer["gcode_macro VARIABLES"]}
gcode:
    {action_call_remote_method("set_device_power",
                            device=printer["gcode_macro VARIABLES"].moonraker_leds_name,
                            state="off")}

[menu __main __power __auto_neopixel]
type: input
enable: {'neopixel leds' in printer.configfile.settings}
name: Auto-Leds: {"On" if menu.input else "Off"}
input: {printer.save_variables.variables.neopixel_auto|default(0)}
input_min: 0
input_max: 1
input_step: 1
gcode:
  {% set svv = printer.save_variables.variables %}
  SAVE_VARIABLE VARIABLE=neopixel_auto VALUE={menu.input|default(svv.neopixel_auto|default(0)) | int}

[menu __main __power __ledson_neopixel]
type: command
name: LEDs Turn On
enable: {'neopixel leds' in printer.configfile.settings}
gcode:
    LED_WHITE

[menu __main __power __ledsoff_neopixel]
type: command
name: LEDs Turn Off
enable: {'neopixel leds' in printer.configfile.settings}
gcode:
    LED_OFF