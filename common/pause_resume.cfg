[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.5
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  {% if not printer.pause_resume.is_paused %}
    # SAVE_GCODE_STATE NAME=pause_st
    PAUSE_BASE
    {% if printer['gcode_macro START_PRINT'].ercf|int == 1 and printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% else %}
      _DISABLE_FILAMENT_SENSOR
    {% endif %}
    M220 S100
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      _PARK_HEAD_PAUSE
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if printer.pause_resume.is_paused %}
    {% if printer.extruder.target != 0 or (params.FORCE is defined and params.FORCE | int == 1) %}
      {% if printer['gcode_macro START_PRINT'].ercf|int == 1 and printer["gcode_macro _ERCF_PAUSE"].is_paused|int != 0 %}
        M118 You can't resume the print without unlocking the ERCF first.
        M118 Run ERCF_UNLOCK and solve any issue before hitting Resume again
      {% else %}
        {% if 'safe_z_home' in printer.configfile.settings %}
          {% set speed = printer.configfile.settings.safe_z_home.speed | int %}
        {% else %}
          {% set speed = 100 %}
        {% endif %}
        ##### read E from pause macro #####
        {% set E = printer["gcode_macro PAUSE"].extrude|float %}
        #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
          {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
          {% set get_params = ('VELOCITY=' + (speed | string)) %}
        {% endif %}
        ##### end of definitions #####
        {% if printer.extruder.can_extrude|lower == 'true' %}
          G91
          G1 E{E} F2100
        {% else %}
          {action_respond_info("Extruder not hot enough")}
        {% endif %}
        # RESTORE_GCODE_STATE NAME=pause_st
        {% if printer['gcode_macro START_PRINT'].ercf|int == 1 and printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
          SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        {% else %}
          _ENABLE_FILAMENT_SENSOR
        {% endif %}
        RESUME_BASE {get_params}
        {% if printer['gcode_macro START_PRINT'].ercf|int == 1 %}
          G90
          M83
        {% endif %}
      {% endif %}
    {% else %}
      {action_respond_info("Extruder not hot enough, aborting RESUME. Use FORCE=1 to force.")}
    {% endif %}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if printer['gcode_macro START_PRINT'].ercf|int == 1 %}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  {% endif %}
  END_PRINT {% if printer['gcode_macro START_PRINT'].ercf|int == 1 %}UNLOAD_AT_END=1{% endif %}
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  #SDCARD_RESET_FILE
  CANCEL_PRINT_BASE


[gcode_macro M600]
description: Change filament
gcode:
  {% if printer.virtual_sdcard.progress > 0 and not printer.pause_resume.is_paused %}
  PAUSE
  {% endif %}

[menu __main __octoprint]
type: disabled

[menu __main __printcontrol]
type: list
name: Print Control
enable: {printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused}
index: 2

[menu __main __printcontrol __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    PAUSE

[menu __main __printcontrol __resume]
type: command
enable: {printer.pause_resume.is_paused}
name: Resume printing
gcode:
    RESUME

[menu __main __printcontrol __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    CANCEL_PRINT

