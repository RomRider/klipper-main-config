[gcode_macro _PRIME_LINE_POSITION]
variable_prime_x_min: 1
variable_prime_y_min: 20
variable_prime_x_max: -1
variable_prime_y_max: -1
gcode:

[gcode_macr _RESET_PRIME_LINE_POSITION]
gcode:
  {% set x_min = 1 %}
  {% set y_min = 20 %}
  {% set x_max = x_min + 5 %}
  {% set y_max = 200 if printer.toolhead.axis_maximum.y > 220 else printer.toolhead.axis_maximum.y - 20 %}
  SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=x_min VALUE={x_min}
  SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=y_min VALUE={y_min}
  SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=x_max VALUE={x_max}
  SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=y_max VALUE={y_max}



[gcode_macro _SET_PRIME_LINE_POSITION]
gcode:
  {% if 'AREA_START' in params and 'AREA_END' in params %}
    {% set area_min_x = params.AREA_START.split(",")[0]|float - printer["gcode_macro VARIABLES"].mesh_area_offset + 1 %}
    {% set area_min_y = params.AREA_START.split(",")[1]|float - printer["gcode_macro VARIABLES"].mesh_area_offset + 1 %}
    {% set area_max_x = params.AREA_END.split(",")[0]|float + printer["gcode_macro VARIABLES"].mesh_area_offset - 1 %}
    {% set area_max_y = params.AREA_END.split(",")[1]|float + printer["gcode_macro VARIABLES"].mesh_area_offset - 1 %}

    {% set x_min = area_min_x if printer.toolhead.axis_minimum.x < area_min_x else printer.toolhead.axis_minimum.x + 1 %}
    {% set y_min = area_min_y if printer.toolhead.axis_minimum.y < area_min_y else printer.toolhead.axis_minimum.y + 1 %}
    {% set x_max = area_max_x if printer.toolhead.axis_maximum.x > area_max_x else printer.toolhead.axis_maximum.x - 1 %}
    {% set y_max = area_max_y if printer.toolhead.axis_maximum.y > area_max_y else printer.toolhead.axis_maximum.y - 1 %}
    SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=x_min VALUE={x_min}
    SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=y_min VALUE={y_min}
    SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=x_max VALUE={x_max}
    SET_GCODE_VARIABLE MACRO=_PRIME_LINE_POSITION VARIABLE=y_max VALUE={y_max}
  {% else %}
    _RESET_PRIME_LINE_POSITION
  {% endif %}

[gcode_macro _MOVE_TO_PRIME_LINE_POSITION]
gcode:
  SAVE_GCODE_STATE NAME=move_to_prime
  {% if "MOVE_SPEED" in params %}
    {% set move_speed = params.MOVE_SPEED|int %}
  {% else %}
    {% if 'safe_z_home' in printer.configfile.settings %}
      {% set move_speed = printer.configfile.settings.safe_z_home.speed | int %}
    {% else %}
      {% set move_speed = 100 %}
    {% endif %}
  {% endif %}
  {% set v_prime = printer["gcode_macro _PRIME_LINE_POSITION"] %}
  G90
  G1 X{v_prime.prime_x_min} Y{v_prime.prime_y_min} F{ (move_speed * 60) | int } 
  G1 Z0.4 F3000
  RESTORE_GCODE_STATE NAME=move_to_prime

[gcode_macro PRIME_LINE]
variable_default_prime_speed: 60
variable_default_prime_length: 15
gcode:
  SAVE_GCODE_STATE NAME=prime_line
  {% if 'LENGTH' in params %}
    {% set length = params.LENGTH | default(default_prime_length, true) | float %}
  {% else %}
    {% set length = printer["gcode_macro VARIABLES"].prime_length | default(default_prime_length, true) %}
  {% endif %}
  {% set debug = params.DEBUG | default(0) | int %}
  {% set speed = (printer["gcode_macro VARIABLES"].prime_speed | default(default_prime_speed, true)) | int * 60 %}

  {% set v_prime = printer["gcode_macro _PRIME_LINE_POSITION"] %}
  {% set x_min = v_prime.prime_x_min %}
  {% set y_min = v_prime.prime_y_min %}
  {% set x_max = v_prime.prime_x_max %}
  {% set y_max = v_prime.prime_y_max %}

  {% if y_max - y_min > 180 %}
    {% set y_max = y_min + 180 %}
    {% if y_max > printer.toolhead.axis_maximum.y %}
      {% set y_max = printer.toolhead.axis_maximum.y - 1 %}
    {% endif %}
  {% endif %}
  {% if x_max - x_min > 180 %}
    {% set x_max = x_min + 180 %}
    {% if x_max > printer.toolhead.axis_maximum.x %}
      {% set x_max = printer.toolhead.axis_maximum.x - 1 %}
    {% endif %}
  {% endif %}

  {% set ns = namespace(x=x_min, y=y_min) %}
  {% set z = 0.28 if not debug else 10 %}
  {% set xy_inc = 0.3 %}
  {% set vertical = x_max - x_min < y_max - y_min %}
  {% if vertical %}
    {% set e_inc = 15.0 / 180 * (y_max - y_min) %}
  {% else %}
    {% set e_inc = 15.0 / 180 * (x_max - x_min) %}
  {% endif %}
  {% set iter = ((length / e_inc) | round | int) %}
  {% if iter == 0 %}
    {% set iter = 1 %}
  {% endif %}
  # avoid priming into the print
  {% if iter * xy_inc > printer["gcode_macro VARIABLES"].mesh_area_offset - 1 %}
    {% set iter = ((printer["gcode_macro VARIABLES"].mesh_area_offset - 1) / xy_inc) | abs | int %}
  {% endif %}

  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  M83 ; use relative distances for extrusion
  G92 E0

  {% if printer.extruder.can_extrude|lower == 'true' or debug %}
    M117 Prime Line...
    G1 Z{z} F5000
    {% for i in range(iter) %}
      G1 X{ns.x} Y{ns.y} Z{z} F5000.0
      {% if vertical %}
        {% set ns.y = y_max if ns.y < y_max else y_min %}
      {% else %}
        {% set ns.x = x_max if ns.x < x_max else x_min %}
      {% endif %}
      G1 X{ns.x} Y{ns.y} Z{z}{% if not debug %} E{e_inc}{% endif %} F{speed}
      {% if debug %}
        {action_respond_info("Would have extruded %.2fmm" % e_inc)}
      {% endif %}
      {% if not loop.last %}
        {% if vertical %}
          {% set ns.x = ns.x + xy_inc %}
        {% else %}
          {% set ns.y = ns.y + xy_inc %}
        {% endif %}
      {% endif %}
    {% endfor %}
    G92 E0 ;Reset Extruder
    G1 X{ns.x - 0.3} Y{ns.y - 0.3} Z2.0 F3000 ;Move Z Axis up
    M117
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESTORE_GCODE_STATE NAME=prime_line