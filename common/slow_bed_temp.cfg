[gcode_macro M190]
rename_existing: M190.1
gcode:
  {% set target_temp = params.S | int %}
  {% set bed_soak_time_per_degree_before_20 = printer["gcode_macro VARIABLES"].bed_soak_time_per_degree_before_20 | default(10) %}
  {% set bed_soak_time_per_degree_after_20 = printer["gcode_macro VARIABLES"].bed_soak_time_per_degree_after_20 | default(10) %}
  {% set duration = printer["gcode_macro VARIABLES"].bed_soak_duration | default("auto") %}
  {% if printer["gcode_macro VARIABLES"].slow_bed | default("false") | lower == "true" and printer.heater_bed.temperature < target_temp %}
    RESPOND TYPE=command MSG="{ "Slow Bed: Waiting for temperature to reach %sC minimum" % target_temp }"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ target_temp }
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ target_temp }
  {% else %}
    M190.1 S{ target_temp }
  {% endif %}

  {% if (duration == "auto" or (duration is not string and duration | int > 0)) and target_temp > 0 %}
    {% if duration == "auto" %}
      {% if bed_soak_time_per_degree_before_20 + bed_soak_time_per_degree_after_20 > 0 %}
        {% set bed_temp_current = params.F | float if params.F else printer.heater_bed.temperature %}
        {% if target_temp > bed_temp_current %}
          {% set bed_temp_difference = target_temp - bed_temp_current %}
        {% else %}
          {% set bed_temp_difference = bed_temp_current - target_temp %}
        {% endif %}
        {% set soak_delay = 0 %}
        {% if bed_temp_difference >= 20 %}
          {% set soak_delay = 20 * bed_soak_time_per_degree_before_20 + (bed_temp_difference - 20) * bed_soak_time_per_degree_after_20 %}
        {% elif bed_temp_difference > 0 %}
          {% set soak_delay = bed_temp_difference * bed_soak_time_per_degree_after_20 %}
        {% endif %}
      {% endif %}
    {% else %}
      {% set soak_delay = duration | int * 60 %}
    {% endif %}
    {% set soak_delay = soak_delay | round | int %}
    {% if soak_delay > 0 %}
      RESPOND TYPE=command MSG="{ "Soaking Bed for %02dm%02ds" % ((soak_delay / 60) | abs | int, (soak_delay % 60) | int) }"
      {% for i in range(1, soak_delay + 1) | reverse %}
        {% if (i / 60) | abs | int > 0 %}
          M117 Bed Soak: { (i / 60) | abs | int }m{ '%02d' % (i % 60 | int) }s
        {% else %}
          M117 Bed Soak: { '%02d' % (i % 60 | int) }s
        {% endif %}
        G4 P1000
      {% endfor %}
    {% endif %}
    M117
  {% endif %}

[gcode_macro SET_BED_SOAK_DURATION]
gcode:
  {% set duration = params.DURATION %}

  {% if duration is defined %}
    {% if duration is string and duration == "auto" %}
      SET_GCODE_VARIABLE MACRO=VARIABLES VARIABLE=bed_soak_duration VALUE="'auto'"
      RESPOND TYPE=command MSG="Bed soak duration is automatically calculated"
    {% else %}
      {% if duration | int == 0 %}
        SET_GCODE_VARIABLE MACRO=VARIABLES VARIABLE=bed_soak_duration VALUE=0
        RESPOND TYPE=command MSG="Bed soak disabled"
      {% elif duration | int > 0 %}
        SET_GCODE_VARIABLE MACRO=VARIABLES VARIABLE=bed_soak_duration VALUE={duration | int}
        RESPOND TYPE=command MSG="Bed soak set to {duration | int}min"
      {% else %}
        {% set error = True %}
      {% endif %}
    {% endif %}
  {% else %}
    {% set error = True %}
  {% endif %}

  {% if error %}
    RESPOND TYPE=command MSG="Please provide a valid bed soaking duration: auto, 0 or more (in minutes)"
  {% endif %}

[menu __main __temp __bed_soak]
type: list
index: 3
name: Bed Soak

[menu __main __temp __bed_soak __duration]
type: input
enable: True
name: { "Duration: auto" if menu.input == -1 else "Duration: %02dmin" % (menu.input | int) }
input: { -1 if printer['gcode_macro VARIABLES'].bed_soak_duration == "auto" else printer['gcode_macro VARIABLES'].bed_soak_duration | int }
input_min: -1
input_max: 30
input_step: 1
gcode:
  SET_BED_SOAK_DURATION DURATION={menu.input | int if menu.input | int >= 0 else "'auto'"}
