[gcode_macro START_PRINT]
variable_ercf: 0
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if 'firmware_retraction' in printer %}
    {% set RETRACT_LENGTH = params.RETRACT_LENGTH|default(printer.configfile.settings.firmware_retraction.retract_length, true)|float %}
    {% set RETRACT_SPEED = params.RETRACT_SPEED|default(printer.configfile.settings.firmware_retraction.retract_speed, true)|float %}
    {% set UNRETRACT_EXTRA_LENGTH = params.UNRETRACT_EXTRA_LENGTH|default(printer.configfile.settings.firmware_retraction.unretract_extra_length, true)|float %}
    {% set UNRETRACT_SPEED = params.UNRETRACT_SPEED|default(printer.configfile.settings.firmware_retraction.unretract_speed, true)|float %}
  {% endif %}
  {% set BED_TEMP = params.BED_TEMP|default(60, true)|int %}
  {% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(200, true)|int %}
  {% set NOZZLE_TEMP_WAIT = NOZZLE_TEMP - 80 if (NOZZLE_TEMP - 80) > 40 else 40 %}
  {% if params.ERCF|lower == "true" %}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=ercf VALUE=1
    _ERCF_RESET_STATS
  {% else %}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=ercf VALUE=0
  {% endif %}
  {% set probe_temp_dependant = True if 'probe' in printer.configfile.settings and 'gcode_macro _VAR_EUCLID_PROBE' not in printer %}

  ; Set Print Area (bed mesh and prime)
  _SET_PRINT_AREA {% if 'AREA_START' in params and 'AREA_END' in params %}AREA_START={params.AREA_START} AREA_END={params.AREA_END}{% endif %}

  CLEAR_PAUSE
  M220 S100 ;Reset Feedrate
  M221 S100 ;Reset Flowrate
  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} SQUARE_CORNER_VELOCITY={printer.toolhead.square_corner_velocity} ;Reset Accell
  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  M82 ; use absolute distances for extrusion
  G92 E0

  _DISABLE_FILAMENT_SENSOR
  {% if 'gcode_macro _VAR_EUCLID_PROBE' in printer %}
    _EUCLID_PROBE_BEGIN_BATCH
  {% endif %}
  ; lift Z if printer is using a probe to avoid temperature drift
  {% if probe_temp_dependant %}
    M104 S{ NOZZLE_TEMP_WAIT } ;start heating hotend
    {% if printer.toolhead.homed_axes != "xyz" %}
      M117 Homing...
      G28 ;home all
    {% endif %}
    {% if BED_TEMP > 0 %}
      G0 Z100 F1200
    {% endif %}
  {% endif %}

  M117 Heating Bed...
  _STATUS_LED_HEATING
  M190 S{ BED_TEMP } ;Wait for bed to reach temp before proceeding

  ; Rehome Z if printer is using a probe to have accurate Z=0
  {% if probe_temp_dependant %}
    # Make sure the probe is at stable temperature before Mesh
    M109 S{ NOZZLE_TEMP_WAIT }
    {% if BED_TEMP > 0 %}
      M117 Homing Z...
      G28 Z
    {% endif %}
  {% else %}
    {% if printer.toolhead.homed_axes != "xyz" %}
      M117 Homing...
      G28 ;home all
    {% endif %}
  {% endif %}
  M104 S{ NOZZLE_TEMP_WAIT } ;start heating hotend
  G29
  {% if 'gcode_macro _VAR_EUCLID_PROBE' in printer %}
    _EUCLID_PROBE_END_BATCH
  {% endif %}

  {% if 'firmware_retraction' in printer %}
    SET_RETRACTION RETRACT_LENGTH={ RETRACT_LENGTH } RETRACT_SPEED={ RETRACT_SPEED } UNRETRACT_EXTRA_LENGTH={ UNRETRACT_EXTRA_LENGTH } UNRETRACT_SPEED={ UNRETRACT_SPEED }
  {% endif %}

  M117 Heating Hotend...
  M104 S{ NOZZLE_TEMP }
  _MOVE_TO_PRIME_LINE_POSITION
  M109 S{ NOZZLE_TEMP } ;Wait for hotend temp

  G21 ; set units to millimeters
  G90 ; use absolute coordinates
  {% if params.RELATIVE_E | lower == "true" %}
    M83
  {% else %}
    M82 ; use absolute distances for extrusion
  {% endif %}
  G92 E0
  {% if params.ERCF|lower == "true" %}
    {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% endif %}
    _ERCF_CHANGE_TOOL_STANDALONE TOOL={ params.ERCF_TOOL }
    {% if params.SKIP_PRIME_LINE | lower != "true" %}
      PRIME_LINE LENGTH=150
    {% endif %}
  {% else %}
    {% if params.SKIP_PRIME_LINE | lower != "true" %}
      PRIME_LINE
    {% endif %}
  {% endif %}

  M117
  _STATUS_LED_PRINT_RUNNING

  {% if params.ERCF|lower == "true" %}
    {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
      SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
  {% else %}
    _ENABLE_FILAMENT_SENSOR
  {% endif %}

[gcode_macro END_PRINT]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set lift = 10 %}
  {% set probe_temp_dependant = True if 'probe' in printer.configfile.settings and 'gcode_macro _VAR_EUCLID_PROBE' not in printer %}
  {% if probe_temp_dependant %}
    {% set lift = 50 %}
  {% endif %}
  M220 S100
  G91 ;Relative positioning
  _SAFE_Z_MOVE LIFT=0.2
  G1 X5 Y5 F3000 ;Wipe out
  G1 E-2 F3600
  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} ;restore accel
  _PARK_HEAD_END LIFT={lift}
  G1 E-2 F3600
  M106 S0 ;Turn-off fan
  M140 S0 ;Turn-off bed
  {% if printer['gcode_macro START_PRINT'].ercf|int == 1 %}
    {% if params.UNLOAD_AT_END | default(0) | int == 1 %}
      {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
      {% endif %}
      ERCF_EJECT
    {% endif %}
    _ENABLE_FILAMENT_SENSOR
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
  {% endif %}
  M400
  M104 S0 ;Turn-off hotend
  _RESET_PRINT_AREA
  M84 ; Disable all steppers
  _STATUS_LED_SUCCESS
