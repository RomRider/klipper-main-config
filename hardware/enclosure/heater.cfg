[heater_generic chamber]
gcode_id: chamber
heater_pin: PB10
#max_power: 1.0
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 80
control: pid
pid_Kp: 66.846
pid_Ki: 0.561
pid_Kd: 1990.353

[verify_heater chamber]
max_error: 120
check_gain_time: 180
hysteresis: 5
heating_gain: 0.5

# [heater_fan chamber]
# pin: PD13
# #max_power: 1.0
# heater: chamber
# heater_temp: 35

[controller_fan chamber]
pin: PD13
#max_power: 1.0
shutdown_speed: 1.0
idle_timeout: 60
heater: chamber
stepper: 

[gcode_macro _CHAMBER_SET_TEMP]
gcode:
  SET_HEATER_TEMPERATURE HEATER=chamber {% if params.TEMP is defined %}TARGET={params.TEMP}{% endif %}

[gcode_macro _CHAMBER_WAIT_TEMP]
gcode:
  {% set temp = params.TEMP %}
  SET_HEATER_TEMPERATURE HEATER=chamber {% if temp is defined %}TARGET={temp}{% endif %}
  {% if temp is defined and temp | int > 0 %}
    M117 Heating Chamber...
    RESPOND TYPE=command MSG="{ "Chamber: Waiting for temperature to reach %sC minimum" % temp }"
    TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={temp}
    M117
  {% endif %}


[menu __main __temp __chamber_temp]
type: input
enable: {'heater_generic chamber' in printer}
name: {"Cha: %2d (%2d)" % (menu.input, printer["heater_generic chamber"].temperature)}
input: {printer["heater_generic chamber"].target}
input_min: 0
input_max: {printer.configfile.config["heater_generic chamber"].max_temp}
input_step: 1
gcode:
  _CHAMBER_SET_TEMP TEMP={menu.input}

[display_template _heater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% set heater_frame = (printer.toolhead.estimated_print_time|int % 10) + 1 %}
      {% if heater_frame <= 5 or 'heater_generic chamber' not in printer %}
        {% if heater.target %}
          {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
          ~bed_heat{frame}~
        {% else %}
          ~bed~
        {% endif %}
      {% else %}
        {% set heater = printer['heater_generic chamber'] %}
        {% if heater.target %}
          ~chamber_heating~
        {% else %}
          ~chamber~
        {% endif %}
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}


[display_glyph chamber_heating]
data:
  ................
  ................
  .**************.
  .*............*.
  .*............*.
  .*.........*..*.
  .*.....*..**..*.
  .*.....**..**.*.
  .*...*.***.**.*.
  .*..**..*****.*.
  .*.***.***.**.*.
  .*.******..**.*.
  .*..********..*.
  .**************.
  ................
  ................

[display_glyph chamber]
data:
  ................
  ................
  .**************.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .*............*.
  .**************.
  ................
  ................